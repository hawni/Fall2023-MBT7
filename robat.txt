این فایل هدر توابع و ساختارهای داده را برای کار با عملیات مربوط به زمان، مانند اندازه گیری فواصل زمانی، تنظیم تایمرها و دسترسی به زمان سیستم ارائه می دهد.
دستورالعمل پیش پردازنده در زبان برنامه نویسی  سی پلاس پلاس
برای گنجاندن فایل هدر در برنامه سی پلاس پلاس

#include <sys/time.h> //-- این برای چه استفاده می شود؟

مال لینوکس و میاد تایم رو از سیستم میگیره شمارش 
.h مال c++


///////////////////////////////////////////
یک دستورالعمل پیش پردازنده در زبان برنامه نویسی در سی پلاس پلاس
برای گنجاندن فایل هدر در برنامه سی پلاس پلاس 
این فایل هدر عملکرد جریان ورودی و خروجی را ارائه می دهد و به شما امکان می دهد عملیات هایی مانند خواندن و نوشتن در جریان های ورودی/خروجی استاندارد=====>cin
/cout
 و همچنین کار با فایل ها را انجام دهید.
فراهم کردن این کلاس ها و توابع ضروری را برای مدیریت عملیات ورودی و خروجی در سی پلاس پلاس


#include <iostream> //-- 

این برای چه استفاده می شود؟

برای cin و cout
جریان های ورودی و خروجی
خواندن و نوشتن
///////////////////////////////////////////
دستورالعمل پیش پردازنده در زبان برنامه نویسی  سی پلاس پلاس
برای گنجاندن فایل هدر در برنامه سی پلاس پلاس
این فایل هدر توابع و ساختارهای داده را برای کار با دایرکتوری ها و ورودی های دایرکتوری فراهم می کند.
عملیات هایی مانند باز کردن و بستن دایرکتوری ها، خواندن ورودی های دایرکتوری و دستکاری اطلاعات مربوط به دایرکتوری را انجام دهید.

#include <dirent.h> //-- What is This Used for ?


directory های لینوکس را میخواند
باز کردن و بستن و خواندن و دستکاری directory
////////////////////////////////////////////

این فایل هدر ماکرو ادعایی را ارائه می دهد که برای اهداف اشکال زدایی و بررسی خطا استفاده می شود. 
ماکرو  به شما امکان می دهد شرایطی را مشخص کنید که باید در نقاط خاصی از برنامه شما صادق باشد. 
اگر شرط نادرست باشد، ماکرو برنامه را خاتمه می دهد و یک پیغام خطا نشان می دهد که شرایط ناموفق را نشان می دهد.
معمولاً در طول توسعه برای شناسایی و شناسایی خطاهای منطقی در کد استفاده می شود.

#include <assert.h> //-- What is This Used for ?

(((((کد هندلینگ 
بررسی کد از نظر ساختاری که این کتابخانه انجام بده
اهداف : اشکال زدایی و بررسی خطا
/////////////////////////////////////////////
دستورالعمل پیش پردازنده در زبان برنامه نویسی  سی پلاس پلاس
برای گنجاندن فایل هدر در برنامه سی پلاس پلاس
این فایل هدر کلاس ها و توابع لازم را برای کار با رشته ها در سی پلاس پلاس
این امکان را به شما می دهد تا عملیات های مختلفی مانند الحاق، مقایسه، جستجو و استخراج را روی رشته ها ایجاد، دستکاری و انجام دهید. 
 برای مدیریت داده های رشته ای


#include <string> //-- What is This Used for ?


فایل های رشته ایی است
string جدید قبول است
برای الحاق و مقایسه و جستجو و استخراج رشته ها
////////////////////////////////////////////

کار ربات تمام میشود.


lua زبان : برنامه نویسی از جنس برنامه نویسیc++
دیوایس کنترل منیجر
 از lua به سی ++
یک api میسازه


int kill_robot() {
system("sudo killall lua"); //-- What is Lua and Its Relation with C++ ?
/////////////////////////////////////////////


در سیستم حافضه مجازی میسازه
برای کلمه shm است 
ایجاد حافضه برای سرعت بیشتر ربات

در شاخه root است سیستم لینوکس بعد فایل dev
deviceکمرا 
dev فایل دخیره یابی  دیوایس

  system("sudo rm -r /dev/shm/*"); //-- What is /dev/shm and What is Used for ?
////////////////////////////////////////////

برای اجرای ربات
سیستم کنترل منیجر
3تا cmd

lua زبان : برنامه نویسی ارز جنس برنامه نویسیc++
دیوایس کنترل منیجر
 از lua به سی ++
یک api میسازه

دیوایس کنترل منیجر:DCM

زبان برنامه نویسی api دسترسی به سی پلاس پلاس رابط کاربری
 cmd[0] = "sudo -E lua run_dcm.lua"; //-- What is DCM ?
////////////////////////////////////////////



std::string *cmd;
FILE *p_pipe[3];
int log_file[3];

std::string get_tty_path() {
    const char *path = "/dev/"; //-- Where is /dev/ ? and What is Used for and What Can We See Inside It ?

در شاخه root است سیستم لینوکس بعد فایل dev
deviceکمرا 
dev فایل دخیره یابی  دیوایس

/////////////////////////////////////////
   double get_time() {
    struct timeval t;
    gettimeofday(&t, NULL);
    return t.tv_sec + 1E-6*t.tv_usec;
}

ایجاد ساختمانیtimeval و t را داده
یک تابع از کتابخونه time به ادرس t دسترسی و خالی میزاره
به ثانیه نشان میده 
به میکرو ثانیه نشان میده
تایم رو دقیق میده
تبدلی میکرو به ثانیه


تولید تابع get time
استراکچر را تعریف میکنه 
بع تابع پاس میذه در خانه حافظه را null 
تایم به صورت ثانیه دومی تایم به صورت میکرو ثانیه


تمامی خروجی ها را به ثانیه نشون میده

هدف نمایش ثانیه


/////////////////////////////

//-- What is Dynamixel ?
DynamixelPacket *parse_status_packet(const char *str) {
    DynamixelPacket *pkt;
    pkt->id = *(str+2);
    pkt->length = *(str+3);
    pkt->instruction = *(str+4);
    memcpy(pkt->parameter, str + 5, pkt->length - 2);
    pkt->checksum = *(str + pkt->length+3);
    return pkt;

اسم موتور در ربات: Dynamixel
سرعت و گشتار
کنترل مو تور ربات
id و length و instruction
بسته رو پک میکنه و ارسال میکنه 

برگرداندن بسته


سه مورد تبدیل به پک و ارسال میکنه

////////////////////////////////////


int read_button_data() {
    if (robot_status == ROBOT_STOPED) {
        int id = 200;
        unsigned char addr = 30;
        unsigned char len = 1;	
        DynamixelPacket *p = dynamixel_instruction_read_data(id, addr, len);
        uchar buff[MAX_READ_BUF];
        // clear buffer
        int r = read(fd , buff , MAX_READ_BUF);
        uchar *strPkt = serialize_packet(p);
        r = write(fd , strPkt , p->length + 4);
        DynamixelPacket statusPkt;
        get_status_packet(fd , (uchar *)buff,&statusPkt);
        return statusPkt.parameter[0];
    } else {
        // read button data from shared memory4
        return (shm_bt[0] * 2) + shm_bt[1];
    }
}



 اون سه تا دسترسی باز کردن پک  و خواندن
کد هندلینگ اگه کد باز نشد اور بده 

وقتی میخونه id و length و instruction
و میفرسته حافضه مجازی
////////////////////////////////////////










